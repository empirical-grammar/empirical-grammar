(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{1308:function(e,t,n){"use strict";n.r(t);var a=n(6),s=n.n(a),o=n(447),c=n(308),i=n(446),r=s.a.createClass({displayName:"Concepts",createNew:function(){this.props.dispatch(c.a.toggleNewConceptModal())},submitNewConcept:function(){var e={name:this.refs.newConceptName.value};this.props.dispatch(c.a.submitNewConcept(e)),this.refs.newConceptName.value=""},renderConcepts:function(){var e=this.props.concepts.data[0];if(e)return e.map(function(e){return s.a.createElement(i.LinkListItem,{activeClassName:"is-active",basePath:"concepts",itemKey:e.uid,key:e.uid,text:e.displayName})})},renderModal:function(){var e=this.props.concepts.submittingnew?"is-loading":"";if(this.props.concepts.newConceptModalOpen)return s.a.createElement(i.Modal,{close:this.createNew},s.a.createElement("div",{className:"box"},s.a.createElement("h4",{className:"title"},"Add New Concept"),s.a.createElement("p",{className:"control"},s.a.createElement("label",{className:"label"},"Name"),s.a.createElement("input",{className:"input",placeholder:"Text input",ref:"newConceptName",type:"text"})),s.a.createElement("p",{className:"control"},s.a.createElement("button",{className:"button is-primary "+e,onClick:this.submitNewConcept},"Submit"))))},render:function(){return s.a.createElement("section",{className:"section"},s.a.createElement("div",{className:"container"},s.a.createElement("h1",{className:"title"},s.a.createElement("button",{className:"button is-primary",onClick:this.createNew},"Create New concept")),this.renderModal(),s.a.createElement("aside",{className:"menu"},s.a.createElement("p",{className:"menu-label"},"Concepts"),s.a.createElement("ul",{className:"menu-list"},this.renderConcepts()))))}});var l=Object(o.b)(function(e){return{concepts:e.concepts,routing:e.routing}})(r),p=n(293),u=n(167),m=n(63),h=n.n(m),d=n(1395),f=s.a.createClass({displayName:"Concept",getInitialState:function(){return{prompt:""}},getConcept:function(){var e=this.props.concepts.data,t=this.props.params.conceptID;return h.a.find(e[0],{uid:t})},deleteConcept:function(){confirm("Are you sure?")&&this.props.dispatch(c.a.deleteConcept(this.props.params.conceptID))},submitNewQuestion:function(e,t){var n=Object.assign({},e,{conceptID:this.props.params.conceptID});this.props.dispatch(u.a.submitNewQuestion(n,t))},questionsForConcept:function(){var t=this;return Object(i.hashToCollection)(this.props.questions.data).filter(function(e){return e.conceptID===t.props.params.conceptID&&"archived"!==e.flag})},renderQuestionsForConcept:function(){var e=this.questionsForConcept().map(function(e){return s.a.createElement("li",{key:e.key},s.a.createElement(p.Link,{to:"/admin/questions/"+e.key},e.prompt.replace(/(<([^>]+)>)/gi,"").replace(/&nbsp;/gi,"")))});return s.a.createElement("ul",null,e)},renderNewQuestionForm:function(){return s.a.createElement(d.a,{itemLevels:this.props.itemLevels,new:!0,question:{},submit:this.submitNewQuestion})},render:function(){this.props.concepts.data,this.props.params.conceptID;return this.getConcept()?s.a.createElement("div",null,s.a.createElement(p.Link,{to:"admin/concepts"},"Return to All Concepts"),s.a.createElement("h4",{className:"title"},this.getConcept().displayName),s.a.createElement("h6",{className:"subtitle"},this.questionsForConcept().length," Questions"),this.renderNewQuestionForm(),this.renderQuestionsForConcept()):!1===this.props.concepts.hasreceiveddata?s.a.createElement("p",null,"Loading..."):s.a.createElement("p",null,"404: No Concept Found")}});var C=Object(o.b)(function(e){return{concepts:e.concepts,questions:e.questions,itemLevels:e.itemLevels,routing:e.routing}})(f);t.default={path:"concepts",indexRoute:{component:l},childRoutes:[{path:":conceptID",component:C}]}},1322:function(e,t,n){"use strict";var a=n(40),s=n.n(a),o=n(46),c=n.n(o),i=n(56),r=n.n(i),l=n(61),p=n.n(l),u=n(62),m=n.n(u),h=n(6),d=n.n(h),f=n(447),C=n(63),b=n.n(C),v=n(1353),N=function(e){function t(){return s()(this,t),r()(this,p()(t).apply(this,arguments))}return m()(t,e),c()(t,[{key:"conceptsToOptions",value:function(){var t=this,e=this.props.concepts.data[0];return this.props.onlyShowConceptsWithConceptFeedback&&(e=b.a.filter(e,function(e){return b.a.keys(t.props.conceptsFeedback.data).includes(e.uid)})),b.a.map(e,function(e){return{label:e.displayName,value:e.uid,shortenedName:e.name}})}},{key:"currentConcept",value:function(){return b.a.find(this.props.concepts.data[0],{uid:this.props.currentConceptUID})}},{key:"placeholder",value:function(){return this.props.currentConceptUID&&0<this.props.currentConceptUID.length&&this.currentConcept()?this.currentConcept().displayName:"Please select a concept."}},{key:"render",value:function(){return d.a.createElement(v.a,{disabled:this.props.selectorDisabled,onChange:this.props.handleSelectorChange,options:this.conceptsToOptions(),placeholder:this.placeholder(),style:{display:"block"}})}}]),t}(d.a.Component);t.a=Object(f.b)(function(e){return{concepts:e.concepts,conceptsFeedback:e.conceptsFeedback}})(N)},1395:function(e,t,n){"use strict";var a=n(122),s=n.n(a),o=n(6),c=n.n(o),i=n(446),r=n(746),l=n(1322);t.a=c.a.createClass({displayName:"questionForm",getInitialState:function(){return{prompt:"",itemLevel:this.props.question.itemLevel?this.props.question.itemLevel:"",concept:this.props.question.conceptID,instructions:this.props.question.instructions?this.props.question.instructions:"",flag:this.props.question.flag?this.props.question.flag:"alpha",cuesLabel:this.props.question.cuesLabel?this.props.question.cuesLabel:""}},submit:function(){var e=s()({conceptUID:this.props.question.conceptUID,cuesLabel:this.props.question.cuesLabel,focusPoints:this.props.question.focusPoints,incorrectSequences:this.props.question.incorrectSequences,modelConceptUID:this.props.question.modelConceptUID,prompt:this.state.prompt,prefilledText:this.refs.prefilledText.value,cues:this.refs.cues.value.split(","),itemLevel:this.state.itemLevel,instructions:this.state.instructions,flag:this.state.flag},"cuesLabel",this.state.cuesLabel);if(this.props.new){var t={text:this.refs.newQuestionOptimalResponse.value.trim(),optimal:!0,count:0,feedback:"That's a strong sentence!"};this.props.submit(e,t)}else e.conceptID=this.state.concept,this.props.submit(e)},copyAnswerToPrefill:function(){this.refs.prefilledText.value=this.refs.newQuestionOptimalResponse.value},handlePromptChange:function(e){this.setState({prompt:e})},handleLevelChange:function(e){this.setState({itemLevel:this.refs.itemLevel.value})},handleInstructionsChange:function(e){this.setState({instructions:e.target.value})},itemLevelToOptions:function(){return Object(i.hashToCollection)(this.props.itemLevels.data).map(function(e){return c.a.createElement("option",null,e.name)})},renderConceptSelector:function(){if(!this.props.new)return c.a.createElement("div",null,c.a.createElement("label",{className:"label"},"Concept"),c.a.createElement("div",null,c.a.createElement(l.a,{currentConceptUID:this.state.concept,handleSelectorChange:this.handleSelectorChange})))},renderOptimalResponse:function(){if(this.props.new)return c.a.createElement("div",null,c.a.createElement("label",{className:"label"},"Optimal Response"),c.a.createElement("p",{className:"control"},c.a.createElement("input",{className:"input",onBlur:this.copyAnswerToPrefill,ref:"newQuestionOptimalResponse",type:"text"})))},handleSelectorChange:function(e){this.setState({concept:e.value})},handleConceptChange:function(){this.setState({concept:this.refs.concept.value})},handleFlagChange:function(e){this.setState({flag:e.target.value})},handleCuesLabelChange:function(e){this.setState({cuesLabel:e.target.value})},render:function(){return this.props.new||this.props.concepts.hasreceiveddata?c.a.createElement("div",{className:"box"},c.a.createElement("h6",{className:"control subtitle"},"Create a new question"),c.a.createElement("label",{className:"label"},"Prompt"),c.a.createElement(i.TextEditor,{ContentState:r.ContentState,EditorState:r.EditorState,handleTextChange:this.handlePromptChange,text:this.props.question.prompt||""}),c.a.createElement("label",{className:"label"},"Instructions for student"),c.a.createElement("p",{className:"control"},c.a.createElement("textarea",{className:"input",defaultValue:this.props.question.instructions,onChange:this.handleInstructionsChange,ref:"instructions",type:"text"})),c.a.createElement("label",{className:"label"},'Cues Label (default is "joining words"/"joining word" for single cues, enter a space to have no label)'),c.a.createElement("p",{className:"control"},c.a.createElement("input",{className:"input",defaultValue:this.props.question.cuesLabel,onChange:this.handleCuesLabelChange,type:"text"})),c.a.createElement("label",{className:"label"},'Cues (separated by commas, no spaces eg "however,therefore,hence")'),c.a.createElement("p",{className:"control"},c.a.createElement("input",{className:"input",defaultValue:this.props.question.cues,ref:"cues",type:"text"})),this.renderOptimalResponse(),c.a.createElement("label",{className:"label"},"Prefilled Text (place 5 underscores where you want the user to fill in _____)"),c.a.createElement("p",{className:"control"},c.a.createElement("input",{className:"input",defaultValue:this.props.question.prefilledText,ref:"prefilledText",type:"text"})),c.a.createElement("label",{className:"label"},"Item level"),c.a.createElement("p",{className:"control"},c.a.createElement("span",{className:"select"},c.a.createElement("select",{onChange:this.handleLevelChange,ref:"itemLevel",value:this.state.itemLevel},c.a.createElement("option",null,"Select Item Level"),this.itemLevelToOptions()))),c.a.createElement(i.FlagDropdown,{flag:this.state.flag,handleFlagChange:this.handleFlagChange,isLessons:!1}),this.renderConceptSelector(),c.a.createElement("br",null),c.a.createElement("button",{className:"button is-primary",onClick:this.submit},"Update Question")):c.a.createElement("div",null,"Loading...")}})}}]);