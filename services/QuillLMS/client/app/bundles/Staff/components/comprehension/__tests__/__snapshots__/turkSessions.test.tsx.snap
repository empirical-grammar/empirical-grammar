// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TurkSessions component should render TurkSessions 1`] = `
<div
  className="turk-sessions-container"
>
  <div
    className="add-session-container"
  >
    <div
      className="date-picker-container"
    >
      <label
        className="datepicker-label"
        htmlFor="date-picker"
      >
        Expiration
      </label>
      <withStyles(SingleDatePicker)
        anchorDirection="left"
        appendToBody={false}
        block={false}
        calendarInfoPosition="bottom"
        customCloseIcon={null}
        customInputIcon={null}
        date={null}
        dayPickerNavigationInlineStyles={null}
        daySize={39}
        disableScroll={false}
        disabled={false}
        displayFormat={[Function]}
        enableOutsideDays={false}
        firstDayOfWeek={null}
        focused={false}
        hideKeyboardShortcutsPanel={false}
        horizontalMargin={0}
        horizontalMonthPadding={13}
        id="date-picker"
        initialVisibleMonth={null}
        inputIconPosition="after"
        isDayBlocked={[Function]}
        isDayHighlighted={[Function]}
        isOutsideRange={[Function]}
        isRTL={false}
        keepFocusOnInput={false}
        keepOpenOnDateSelect={false}
        monthFormat="MMMM YYYY"
        navNext={null}
        navPosition="navPositionTop"
        navPrev={null}
        noBorder={false}
        numberOfMonths={1}
        onClose={[Function]}
        onDateChange={[Function]}
        onFocusChange={[Function]}
        onNextMonthClick={[Function]}
        onPrevMonthClick={[Function]}
        openDirection="down"
        orientation="horizontal"
        phrases={
          Object {
            "calendarLabel": "Calendar",
            "chooseAvailableDate": [Function],
            "clearDate": "Clear Date",
            "closeDatePicker": "Close",
            "dateIsSelected": [Function],
            "dateIsUnavailable": [Function],
            "enterKey": "Enter key",
            "escape": "Escape key",
            "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
            "homeEnd": "Home and end keys",
            "jumpToNextMonth": "Move forward to switch to the next month.",
            "jumpToPrevMonth": "Move backward to switch to the previous month.",
            "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
            "keyboardShortcuts": "Keyboard Shortcuts",
            "leftArrowRightArrow": "Right and left arrow keys",
            "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
            "moveFocusByOneMonth": "Switch months.",
            "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
            "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
            "openThisPanel": "Open this panel.",
            "pageUpPageDown": "page up and page down keys",
            "questionMark": "Question mark",
            "returnFocusToInput": "Return to the date input field.",
            "roleDescription": "datepicker",
            "selectFocusedDate": "Select the date in focus.",
            "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
            "upArrowDownArrow": "up and down arrow keys",
          }
        }
        placeholder="Date"
        readOnly={false}
        regular={false}
        renderCalendarInfo={null}
        renderDayContents={null}
        renderMonthElement={null}
        renderMonthText={null}
        renderNavNextButton={null}
        renderNavPrevButton={null}
        renderWeekHeaderElement={null}
        reopenPickerOnClearDate={false}
        required={false}
        screenReaderInputMessage=""
        showClearDate={false}
        showDefaultInputIcon={false}
        small={false}
        verticalHeight={null}
        verticalSpacing={22}
        weekDayFormat="dd"
        withFullScreenPortal={false}
        withPortal={false}
      />
    </div>
    <button
      className="generate-session-button quill-button fun primary contained"
      onClick={[Function]}
      type="submit"
    >
      Generate Turk Session
    </button>
  </div>
  <DataTable
    averageFontWidth={7}
    className="turk-sessions-table"
    headers={
      Array [
        Object {
          "attribute": "link",
          "name": "Link",
          "width": "600px",
        },
        Object {
          "attribute": "expiration",
          "name": "Expiration Date",
          "width": "200px",
        },
        Object {
          "attribute": "edit",
          "name": "",
          "width": "100px",
        },
        Object {
          "attribute": "delete",
          "name": "",
          "width": "100px",
        },
      ]
    }
    rows={Array []}
  />
</div>
`;
