version: 2
jobs:
  lms_rails_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: ruby:2.5.1
        environment:
          PG_DB: quill_test_db
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      - image: postgres:10.5-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: quill_test_db
          POSTGRES_PASSWORD: ""
      - image: circleci/node:8.11.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-cache-{{ checksum "services/QuillLMS/Gemfile.lock" }}
            - bundle-cache-
          paths:
            - services/QuillLMS/vendor/bundle
      - restore_cache:
          keys:
            - npm-cache-{{ checksum "services/QuillLMS/package-lock.json" }}
            - npm-cache
          paths:
            - services/QuillLMS/node_modules
            - services/QuillLMS/client/node_modules
      - run:
          name: Bundle Install if cache isn't present.
          command: |
            cd services/QuillLMS
            bundle check || bundle install --path vendor/bundle
      - run:
          name: NPM install, should be short-cutted if cache is present
          command: |
            cd services/QuillLMS
            npm install
      - save_cache:
          key: bundle-cache-{{ checksum "services/QuillLMS/Gemfile.lock" }}
          paths:
            - services/QuillLMS/vendor/bundle
      - save_cache:
          key: npm-cache-{{ checksum "services/QuillLMS/package-lock.json" }}
          paths:
            - services/QuillLMS/node_modules
            - services/QuillLMS/client/node_modules
      - run:
          name: Install postgres dependencies
          command: |
            apt-get update
            apt-cache search postgres
            apt install -y postgresql-client
      - run:
          name: Copy Config files
          command: |
            cd services/QuillLMS
            cp .env-sample .env
            cp config/database.yml.circle config/database.yml
      - run:
          name: Set up DB
          command: |
            cd services/QuillLMS
            bundle exec rake db:structure:load
            bundle exec rake db:migrate
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/quill_test_db"
      - run:
          name: Run tests
          command: |
            cd services/QuillLMS
            bundle exec rake spec
  lms_node_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: circleci/node:8.11.3
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-v1-{{ checksum "services/QuillLMS/package-lock.json" }}
          paths:
            - /services/QuillLMS/node_modules
      - run:
          name: Install NPM dependencies
          command: |
            cd services/QuillLMS
            npm install
      - save_cache:
          key: npm-cache-v1-{{ checksum "services/QuillLMS/package-lock.json" }}
          paths:
            - /services/QuillLMS/node_modules
      - run:
          name: Run LMS Frontend Tests
          command: |
            cd services/QuillLMS/client
            FORCE_COLOR=true npm run jest --colors
  cms_rails_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: ruby:2.3.1
        environment:
          PG_DB: quill_cms_test_db
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      - image: postgres:10.5-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: quill_cms_test_db
          POSTGRES_PASSWORD: ""
      - image: docker.elastic.co/elasticsearch/elasticsearch:5.6.2
        environment:
          - xpack.security.enabled: false
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-cache-cms{{ checksum "services/QuillCMS/Gemfile.lock" }}
            - bundle-cache-cms
          paths:
            - services/QuillCMS/vendor/bundle
      - run:
          name: Bundle Install if cache isn't present.
          command: |
            cd services/QuillCMS
            bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: bundle-cache-cms{{ checksum "services/QuillCMS/Gemfile.lock" }}
          paths:
            - services/QuillCMS/vendor/bundle
      - run:
          name: Copy Config files
          command: |
            cd services/QuillCMS
            cp config/database.yml.circle config/database.yml
      - run:
          name: Set up DB
          command: |
            cd services/QuillCMS
            bundle exec rake db:migrate
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/quill_cms_test_db"
      - run:
          name: Run CMS tests
          command: |
            cd services/QuillCMS
            bundle exec rake spec
  connect_node_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: circleci/node:7.7.4
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-connect-v1-{{ checksum "services/QuillConnect/package-lock.json" }}
          paths:
            - /services/QuillConnect/node_modules
      - run:
          name: Install NPM dependencies
          command: |
            cd services/QuillConnect
            npm install
      - save_cache:
          key: npm-cache-connect-v1-{{ checksum "services/QuillConnect/package-lock.json" }}
          paths:
            - /services/QuillConnect/node_modules
      - run:
          name: Run QuillConnect Tests
          command: |
            cd services/QuillConnect
            FORCE_COLOR=true npm run jest --colors
  lessons_node_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: circleci/node:8.11.3
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-lessons-v1-{{ checksum "services/QuillLessons/package-lock.json" }}
          paths:
            - /services/QuillLessons/node_modules
      - run:
          name: Install NPM dependencies
          command: |
            cd services/QuillLessons
            npm install
      - save_cache:
          key: npm-cache-lessons-v1-{{ checksum "services/QuillLessons/package-lock.json" }}
          paths:
            - /services/QuillLessons/node_modules
      - run:
          name: Run QuillLessons Tests
          command: |
            cd services/QuillLessons
            FORCE_COLOR=true npm run jest --colors
  grammar_node_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: circleci/node:8.11.2
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-grammar-v1-{{ checksum "services/QuillGrammar/package-lock.json" }}
          paths:
            - /services/QuillGrammar/node_modules
      - run:
          name: Install NPM dependencies
          command: |
            cd services/QuillGrammar
            npm install
      - save_cache:
          key: npm-cache-grammar-v1-{{ checksum "services/QuillGrammar/package-lock.json" }}
          paths:
            - /services/QuillGrammar/node_modules
      - run:
          name: Run QuillGrammar Tests
          command: |
            cd services/QuillGrammar
            FORCE_COLOR=true npm run test --colors
  diagnostic_node_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: circleci/node:8.11.3
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-diagnostic-v1-{{ checksum "services/QuillDiagnostic/package-lock.json" }}
          paths:
            - /services/QuillDiagnostic/node_modules
      - run:
          name: Install NPM dependencies
          command: |
            cd services/QuillDiagnostic
            npm install
      - save_cache:
          key: npm-cache-diagnostic-v1-{{ checksum "services/QuillDiagnostic/package-lock.json" }}
          paths:
            - /services/QuillDiagnostic/node_modules
      - run:
          name: Run QuillDiagnostic Tests
          command: |
            cd services/QuillDiagnostic
            FORCE_COLOR=true npm run test --colors
  proofreader_node_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: circleci/node:8.11.2
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-proofreader-v1-{{ checksum "services/QuillProofreader/package-lock.json" }}
          paths:
            - /services/QuillProofreader/node_modules
      - run:
          name: Install NPM dependencies
          command: |
            cd services/QuillProofreader
            npm install
      - save_cache:
          key: npm-cache-proofreader-v1-{{ checksum "services/QuillProofreader/package-lock.json" }}
          paths:
            - /services/QuillProofreader/node_modules
      - run:
          name: Run QuillProofreader Tests
          command: |
            cd services/QuillProofreader
            FORCE_COLOR=true npm run test --colors
  spellchecker_node_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: circleci/node:8.11.3
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-spellchecker-v1-{{ checksum "packages/quill-spellchecker/package-lock.json" }}
          paths:
            - /packages/quill-spellchecker/node_modules
      - run:
          name: Install NPM dependencies
          command: |
            cd packages/quill-spellchecker
            npm install
      - save_cache:
          key: npm-cache-spellchecker-v1-{{ checksum "packages/quill-spellchecker/package-lock.json" }}
          paths:
            - /packages/quill-spellchecker/node_modules
      - run:
          name: Run Spellchecker Tests
          command: |
            cd packages/quill-spellchecker
            FORCE_COLOR=true npm run test --colors
  marking_logic_node_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: circleci/node:8.11.3
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-marking-logic-v1-{{ checksum "packages/quill-marking-logic/package-lock.json" }}
          paths:
            - /packages/quill-marking-logic/node_modules
      - run:
          name: Install NPM dependencies
          command: |
            cd packages/quill-marking-logic
            npm install
      - save_cache:
          key: npm-cache-marking-logic-v1-{{ checksum "packages/quill-marking-logic/package-lock.json" }}
          paths:
            - /packages/quill-marking-logic/node_modules
      - run:
          name: Run Marking Logic Tests
          command: |
            cd packages/quill-marking-logic
            FORCE_COLOR=true npm run test --colors
  comprehension_rails_build:
    working_directory: ~/Empirical-Core
    docker:
      - image: circleci/ruby:2.5.1-node
        environment:
          PG_DB: quill_comprehension_db
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      - image: postgres:10.5-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: quill_comprehension_db
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-cache-comprehension-v2-{{ checksum "services/QuillComprehension/Gemfile.lock" }}
            - bundle-cache-comprehension-v2-
          paths:
            - services/QuillComprehension/vendor/bundle
      - run:
          name: Bundle Install if cache isn't present.
          command: |
            cd services/QuillComprehension
            bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: bundle-cache-comprehension-v2-{{ checksum "services/QuillComprehension/Gemfile.lock" }}
          paths:
            - services/QuillComprehension/vendor/bundle
      - run:
          name: Copy Config files
          command: |
            cd services/QuillComprehension
            cp config/database.yml.circle config/database.yml
      - run:
          name: Set up DB
          command: |
            cd services/QuillComprehension
            bundle exec rake db:migrate
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/quill_comprehension_db"
      - run:
          name: Run tests
          command: |
            cd services/QuillComprehension
            bundle exec rake spec
workflows:
  version: 2
  build-test:
    jobs:
      - lms_rails_build
#      - lms_node_build
#      - cms_rails_build
#      - connect_node_build
#      - lessons_node_build
#      - grammar_node_build
#      - diagnostic_node_build
#      - proofreader_node_build
#      - spellchecker_node_build
#      - marking_logic_node_build
#      - comprehension_rails_build
